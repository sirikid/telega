; -*- mode: emacs-lisp; lexical-binding: t; no-byte-compile: t -*-

;; Autodetermined by `eldev init'.
(eldev-use-package-archive 'melpa)

(eldev-use-plugin 'autoloads)

(add-to-list 'eldev-lint-disabled 'elisp)

(eldev-defbuilder telega-make (dir target &optional flags)
  :short-name "MAKE"
  :message source-and-target
  :source-files "*"
  :targets ("" -> "")
  :collect ":default"
  (eldev-call-process (executable-find "make")
      `("-C" ,dir ,target . ,flags)
    ;; FIXME: do I need it?
    (when (fboundp 'eldev--forward-process-output)
      (eldev--forward-process-output))
    (unless (zerop exit-code)
      (signal 'eldev-error (list "`make' process exited with error code %d" exit-code)))))

(defconst server-enable-voip "TGVOIP=1")

(defvar server-flags '())

(eldev-defcommand mypackage-build-server (&rest parameters)
  "Build server"
  (telega-make "./server" "all" server-flags))

(eldev-defcommand mypackage-clean-server (&rest parameters)
  "Clean server"
  (telega-make "./server" "clean" server-flags))

(eldev-defcommand mypackage-test-server (&rest parameters)
  "Run server tests"
  (telega-make "./server" "test" server-flags))

(eldev-defcommand mypackage-install-server (&rest parameters)
  "Install server"
  (telega-make "./server" "install" server-flags))

(eldev-defoption mypackage-build-server-enable-voip ()
  "Enable Voice over IP."
  :options (--enable-voip)
  :for-command (build-server)
  (add-to-list 'server-flags server-enable-voip))

(eldev-defoption mypackage-server-flag-destdir (&optional value)
  "Flag to pass `DESTDIR' to `make'."
  :options (--destdir)
  :optional-value DESTDIR
  :for-command (install-server)
  (setq server-flags (cl-remove "DESTDIR=" server-flags :test #'string-prefix-p))
  (add-to-list 'server-flags (concat "DESTDIR=" value)))

(eldev-defoption mypackage-server-flag-prefix (&optional value)
  "Flag to pass `PREFIX' to `make'."
  :options (--prefix)
  :optional-value PREFIX
  :for-command (install-server)
  (setq server-flags (cl-remove "PREFIX=" server-flags :test #'string-prefix-p))
  (add-to-list 'server-flags (concat "PREFIX=" value)))

(eldev-defoption mypackage-server-flag-binprefix (&optional value)
  "Flag to pass `BINPREFIX' to `make'."
  :options (--binprefix)
  :optional-value BINPREFIX
  :for-command (install-server)
  (setq server-flags (cl-remove "BINPREFIX=" server-flags :test #'string-prefix-p))
  (add-to-list 'server-flags (concat "BINPREFIX=" value)))

;; Local Variables:
;; eval: (add-hook (quote flycheck-disabled-checkers) (quote emacs-lisp-checkdoc) nil t)
;; End:
